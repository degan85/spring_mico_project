buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.mico'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile("org.springframework.boot:spring-boot-starter-data-rest")
	compile group: 'org.springframework.data', name: 'spring-data-rest-hal-browser', version: '2.4.0.RELEASE'
	compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.0.0'
	
	compile("org.springframework.boot:spring-boot-starter-thymeleaf")
	compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity4', version: '2.1.2.RELEASE'
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile("org.springframework.boot:spring-boot-devtools")
	compile group: 'org.webjars', name: 'jquery', version: '2.1.3'
	compile group: 'org.webjars', name: 'bootstrap', version: '3.2.0'
	
	
	// JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile group: 'net.sourceforge.nekohtml', name: 'nekohtml', version: '1.9.22'
	
	// Use MySQL Connector-J
	compile 'mysql:mysql-connector-java'
	testCompile("junit:junit")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile("org.springframework.security:spring-security-test")
	
	compile("org.springframework.boot:spring-boot-starter-security")
	
	// session
	compile('org.springframework.session:spring-session-data-redis:1.2.2.RELEASE')
	
	compile group: 'org.projectlombok', name: 'lombok', version: '1.16.8' 
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4' 
	compile group: 'commons-io', name: 'commons-io', version: '2.5'
}
